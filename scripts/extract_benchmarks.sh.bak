#!/bin/bash

# Enable strict mode: exit on error, undefined variables, pipe failures
set -euo pipefail

# Error handling function
error_exit() {
    local message="$1"
    local code="${2:-1}"
    echo "ERROR: $message" >&2
    exit "$code"
}

# Print usage information
usage() {
    echo "Usage: extract_benchmarks.sh [-h|--help] [directory]"
    echo
    echo "Extracts benchmark results from Criterion JSON files and outputs as JSON."
    echo
    echo "Options:"
    echo "  -h, --help      Show this help message and exit"
    echo
    echo "Arguments:"
    echo "  directory       Optional directory containing criterion results (default: target/criterion)"
    echo
    echo "Exit Codes:"
    echo "  0  Success"
    echo "  1  Error occurred"
    exit 0
}

# Default values
result_dir="target/criterion"

# Check for help option and parse directory argument
while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            usage
            ;;
        *)
            result_dir=$1
            shift
            ;;
    esac
done

# Set TARGET_DIR variable for validation
TARGET_DIR=${result_dir}

# Verify target directory exists and is readable
[[ -d "$TARGET_DIR" ]] || error_exit "Directory '$TARGET_DIR' not found" 3
[[ -r "$TARGET_DIR" ]] || error_exit "Directory '$TARGET_DIR' is not readable" 3

# Trap to catch unexpected errors
trap 'error_exit "Unexpected error at line $LINENO"' ERR

# Script to extract benchmark results from Criterion JSON files
echo '{"benchmarks": ['

first=true
for estimates_file in $(find "./$result_dir" -path "*/new/estimates.json" | sort); do
    # Extract the benchmark path (e.g., tds_new_2d/tds_new/50)
    benchmark_path=$(echo "$estimates_file" | sed "s|./$result_dir/||" | sed 's|/new/estimates.json||')
    
    # Extract mean point estimate from JSON
    mean=$(jq -r '.mean.point_estimate' "$estimates_file")
    
    if [ "$first" = true ]; then
        first=false
    else
        echo ","
    fi
    
    echo -n "  {\"id\": \"$benchmark_path\", \"mean\": $mean, \"alloc_bytes\": null}"
done

echo ''
echo ']}'
