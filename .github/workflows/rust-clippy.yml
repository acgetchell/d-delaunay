# Advanced Clippy analysis with SARIF output for security integration
# Note: Basic clippy checks are also run in the main CI workflow

name: "Clippy Security Analysis"

on:
  # Only run on schedule and manual trigger to avoid duplication with CI
  schedule:
    - cron: '17 22 * * 0'  # Weekly on Sunday
  workflow_dispatch:
  # Run on main branch pushes for security scanning
  push:
    branches: ["main"]

jobs:
  clippy-sarif:
    name: Clippy SARIF Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy
          cache: true

      - name: Cache clippy tools
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/clippy-sarif
          key: clippy-sarif-${{ runner.os }}

      - name: Install clippy-sarif tools
        run: |
          if ! command -v clippy-sarif &> /dev/null; then
            cargo install clippy-sarif sarif-fmt --locked
          fi

      - name: Run clippy with SARIF output
        run: |
          cargo clippy \
            --workspace \
            --all-targets \
            --all-features \
            --message-format=json \
            -- -W clippy::pedantic -W clippy::nursery | \
            clippy-sarif | \
            tee rust-clippy-results.sarif | \
            sarif-fmt
        continue-on-error: true

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: rust-clippy-results.sarif
          category: "clippy"
          wait-for-processing: true
